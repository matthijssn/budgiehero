# render.yaml â€” BudgieHero (Test + Prod + EnvVarGroups)

# ------- DRY anchors (monorepo) -------
x-api-base: &api_base
  type: web
  runtime: docker            # i.p.v. 'env: docker'
  rootDir: apps/api          # monorepo: build context
  region: frankfurt
  plan: starter
  healthCheckPath: /health
  envVars:
    - key: NODE_ENV
      value: production
x-worker-base: &worker_base
  type: worker
  runtime: docker
  rootDir: apps/worker
  region: frankfurt
  plan: starter
  envVars:
    - key: NODE_ENV
      value: production

# ------- EnvVarGroups (secrets/vars per omgeving) -------
envVarGroups:
  - name: budgiehero-secrets-test
    envVars:
      - key: JWT_SECRET
        sync: false
      - key: GOOGLE_CLIENT_ID
        sync: false
      - key: GOOGLE_CLIENT_SECRET
        sync: false
      - key: OIDC_REDIRECT_URI
        sync: false
      - key: MONGODB_URI
        sync: false
      - key: FRONTEND_ORIGIN
        value: https://budgiehero-web-test.vercel.app

  - name: budgiehero-secrets-prod
    envVars:
      - key: JWT_SECRET
        sync: false
      - key: GOOGLE_CLIENT_ID
        sync: false
      - key: GOOGLE_CLIENT_SECRET
        sync: false
      - key: OIDC_REDIRECT_URI
        sync: false
      - key: MONGODB_URI
        sync: false
      - key: FRONTEND_ORIGIN
        value: https://budgiehero.app

# ------- Services (Test + Prod) -------
services:
  # === TEST ===
  - name: budgiehero-redis-test
    type: redis
    plan: starter
    region: frankfurt

  - name: budgiehero-api-test
    <<: *api_base
    envVars:
      - fromGroup: budgiehero-secrets-test     # koppel EnvVarGroup (gedocumenteerd patroon)
      - key: REDIS_URL                         # Redis-URL rechtstreeks uit de service
        fromService:
          type: redis
          name: budgiehero-redis-test
          property: connectionString

  - name: budgiehero-worker-test
    <<: *worker_base
    envVars:
      - fromGroup: budgiehero-secrets-test
      - key: REDIS_URL
        fromService:
          type: redis
          name: budgiehero-redis-test
          property: connectionString

  # === PROD ===
  - name: budgiehero-redis-prod
    type: redis
    plan: standard
    region: frankfurt

  - name: budgiehero-api-prod
    <<: *api_base
    plan: standard
    # Zet autodeploy UIT in de service-instellingen; Prod deployen via Deploy Hook of handmatig.
    envVars:
      - fromGroup: budgiehero-secrets-prod
      - key: REDIS_URL
        fromService:
          type: redis
          name: budgiehero-redis-prod
          property: connectionString

  - name: budgiehero-worker-prod
    <<: *worker_base
    plan: standard
    envVars:
      - fromGroup: budgiehero-secrets-prod
      - key: REDIS_URL
        fromService:
          type: redis
          name: budgiehero-redis-prod
          property: connectionString